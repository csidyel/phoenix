name: CI
on: 
  push:
    branches:
      - main

jobs:
  mix_test:
    name: mix test (OTP ${{matrix.otp}} | Elixir ${{matrix.elixir}})

    env:
      MIX_ENV: test

    strategy:
      matrix:
        include:
          - elixir: 1.11.4
            otp: 23.3

          - elixir: 1.12.3
            otp: 24.3

    runs-on: ubuntu-20.04

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up Elixir
      uses: erlef/setup-beam@v1
      with:
        elixir-version: ${{ matrix.elixir }}
        otp-version: ${{ matrix.otp }}

    - name: Restore deps and _build cache
      uses: actions/cache@v3
      with:
        path: |
          deps
          _build
        key: deps-${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-${{ hashFiles('**/mix.lock') }}
        restore-keys: |
          deps-${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}

    - name: Install dependencies
      run: mix deps.get --only test

    - name: Remove compiled application files
      run: mix clean

    - name: Run tests
      run: mix test

  npm_test:
    name: npm test
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Restore deps and _build cache
        uses: actions/cache@v3
        with:
          path: |
            deps
            _build
          key: deps-${{ runner.os }}-npm-${{ hashFiles('**/mix.lock') }}
          restore-keys: |
            deps-${{ runner.os }}-npm

      - name: Set up Node.js 12.x
        uses: actions/setup-node@v4
        with:
          node-version: 12.x

      - name: Restore npm cache
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: npm install and test
        run: |
          cd assets
          npm install
          npm test

  integration-test-elixir:
    runs-on: ubuntu-20.04
    env:
      FORCE_COLOR: 1

    steps:
      - uses: actions/checkout@v4
      - run: cat /proc/cpuinfo | grep processor | wc -l
      - name: Download released earth
        run: "sudo /bin/sh -c 'wget https://github.com/earthly/earthly/releases/download/v0.5.16/earthly-linux-amd64 -O /usr/local/bin/earthly && chmod +x /usr/local/bin/earthly'"
      - name: Execute tests
        run: earthly -P --build-arg ELIXIR=1.14.0 --build-arg OTP=24.3.4 +integration-test
